[{"title":"关于 IPv6 实现公网访问的探索与应用","path":"/2025/03/26/关于 IPv6 实现公网访问的探索与应用/","content":"来自作者：文件可能有错误，请注意甄别 猛然发现现在 IPv6 已经成为了可靠的公网访问内网的方案。运营商为每一个家庭网络分配了高达 64 位的地址号，可以有 $2^{64}$ 个主机同时以公网地址的身份连接到互联网。 工具 使用 tail -f 来事实跟踪更新的文件内容 使用 mkdir -p 来直接创建整条路径文件夹 使用 apachectl -t 来检查配置文件语法 使用 cd - 回到上一个工作目录 原来 Obsidian 可以按块缩进，然后代码块就可以完美的放在列表内了 如果服务通过 restart 来重启，发现一些更改没有生效，那就尝试先 stop 再 start。在 apachectl 中 restart 后，DAV 配置不知为何不会生效，需要 stop 再 start。 要注意，macOS 默认不允许三方软件访问外部磁盘，因此如果要通过 Apache WebDAV 等实现对外部磁盘的访问，需要在 macOS 的设置-隐私中，在完全磁盘访问权限中，增加 &#x2F;usr&#x2F;sbin&#x2F;httpd 来实现外部磁盘访问。 对于其他用户（例如用于运行 Apache 服务器的 _www 用户），lsof 可能检测不出其端口。此时只需要 sudo 即可。 vim 删除当前字符 x 回到行首 0 疑问与解答 一般家庭网络的 IPv6 地址的网络号为前 64 位。同时，运营商并不会为家庭网络分配真正静态的 IPv6 地址，也就是说，其地址中的网络前缀是动态的。何时动的？事实上，我曾经固定了我笔记本的 IPv6 地址，并绑定到了域名，因为不会也懒得弄 DDNS，所以就暂时不折腾了。之后，由于有些事情笔记本带了出去，持续了几天，回来之后发现，域名解析还是正常的，但是之前固定的 IPv6 地址已经不可达了。后来才发现并意识到，在这几天期间，光猫与路由器被重启过。在这个时候，ISP 会为我的家庭网络重新分配 IPv6 地址，此时网络号已经发生了变化，原先固定的 IPv6 地址已经不可用了，或者成了别人家的了。 你当然可以将自己的设备的 IPv6 地址设置为固定的，然后配合 DNS 实现公网便捷访问。但是重启网络设备会重新分配网络号，会导致之前固定的不可用。因此配合 DDNS 是最优解。 实现 HTTP 服务器 实际上，这似乎是做不到的，因为 ISP 不让家用宽带监听 80&#x2F;443 端口。 在家用电脑上实现 WebDAV 服务器 参考自 https://blog.csdn.net/weixin_34258078/article/details/93450486 与 ChatGPT 才发现，经常在镜像源看到的简陋文件页面竟然就是 Apache 提供的 WebDAV 服务器。 买了个 Apple TV，但是没有资源，也没有订阅钱，更没有 NAS 钱，所以吃灰了。打算卖掉，但是在卖之前，突然想到既然 Apple TV 插不了存储盘，为什么不用本地服务器呢？ 在 Mac 上实现 Apache WebDAV 服务器 macOS 已经预装了 Apache 服务器，只需要开启和配置 WebDAV 模块即可 进入 &#x2F;etc&#x2F;apache2 编辑 httpd.conf 配置文件，将 WebDAV 启用 sudo vim httpd.conf 查找 httpd-dav.conf ，命令模式下输入/httpd-dav 将 #Include /private/etc/apache2/extra/httpd-dav.conf 注释移除 分别查找 dav_module、dav_fs_module、auth_digest_module，然后将其 LoadModule 前的注释移除 LoadModule dav_module libexec/apache2/mod_dav.so LoadModule dav_fs_module libexec/apache2/mod_dav_fs.so LoadModule auth_digest_module libexec/apache2/mod_auth_digest.so 保存并退出（:wq） 创建自己的 WebDAV 资源目录 sudo mkdir -p 你想创建的 WebDAV 目录 sudo chown -R 你的用户名:_www 你想创建的 WebDAV 目录 sudo chmod -R 755 你想创建的 WebDAV 目录 创建专用于 WebDAV 的用户与密码 sudo htpasswd -c /etc/apache2/webdav.passwd zhonjc 进入 &#x2F;etc&#x2F;apache2&#x2F;extra 编辑 httpd-dav.conf，配置 WebDAV sudo vim httpd-dav.conf 在配置文件中给出的默认的 uploads 目录后，新增自己的目录 1234567891011121314Alias /webdav &quot;/Users/zhonjc/WebDAV&quot;# /webdav 就是之后访问 WebDAV 的路径&lt;Directory &quot;/Users/zhonjc/WebDAV&quot;&gt; Dav On AuthType Basic AuthName WebDAV-Security AuthUserFile &quot;/etc/apache2/webdav.passwd&quot; # 输入刚刚创建的用户密码文件 AuthDigestProvider file AllowOverride None Options Indexes FollowSymLinks Require valid-user&lt;/Directory&gt; 重启 Apache sudo apachectl stop sudo apachectl start 然后就可以访问 localhost&#x2F;webdav 了 实现文件服务器"},{"title":"马上要研究生复试","path":"/2025/03/17/马上要复试/","content":"马上要面试了，感觉没希望了。 什么都考，408、数据库，甚至靠离散数学 全靠考 C 语言的笔试和机试了 但 C 语言我也不咋会 笔试似乎还加了一门数据结构更完蛋了"},{"title":"记录 C 语言填坑过程","path":"/2025/03/10/记录 C 语言填坑过程/","content":"结构体 在定义一个结构体变量之时，其已经被分配了应有的空间。（实际上，C 语言任何变量在定义时都会自动分配空间） 结构体在定义时可以进行初始化，使用{}，但除了在初始化时可以使用{}赋值外，其余任何时候都不用{}赋值。（实际上，数组也是这样） 结构体数组同样，当进行初始化时，会自动分配整个数组的空间，也可以通过{}嵌套赋值。（也就是说，C 语言数组定义时要么要通过数字显式给出数组长度，要么通过{}进行初始化隐式给出长度，否则会语法错误） 结构体当中如果有数组，那么在定义结构体类型时，是否需要给出数组成员的长度？需要 结构体能否直接通过 A = B 来将B结构体的值赋给A？可以 文件 文件定义方式 FILE * fp; fopen(path, mode)/fclose(FILE *) mode 包含 r/w/a/b 文件读取方法 按字符 fgetc(fp) 返回字符，结尾 EOF 按行 fgets(buffer, buffer_l, fp)，读入 buffer，通过 feof(fp)来检测文件尾，每行 buffer 从头写。fgets 当文件尾和出错时都会返回 NULL。固定写法： while(!feof(fp))&#123;if(fgets(…) != NULL)&#123;&#125;&#125; 按格式 fscanf(fp, “format”, aim)返回读取项数 文件写入方法 按字符 fputc(char, fp) 按行 fputs(string, fp) 按格式 fprintf(fp, format, src) 数组 任何类型的数组，只有在定义时才能通过{}进行赋值（初始化）。 任何类型的数组，在定义时必须显式或隐式的给出数组长度，不可以不给出。 任何类型的数组在定义时便会分配好空间，后续无需再次分配。 数组名，本质上是一种指针常量，其不是普通的指针，不可以被赋值。切记不要把值赋给一个数组名，尤其是字符数组构成的字符串特别容易写错。 对于数组名 A，A[i]是值，A 是地址，可以有 A+1 来指向下一个值，但 A 本身的值无法更改，不可以 A++。 字符串 C 语言中的字符串本质上就是一个字符数组。 字符串的输入输出 虽然本质上是一个数组，但是可以通过数组名与 printf 和 scanf 直接进行输入输出 无论在 printf 还是 scanf 其中 %s 接收的类型都是 char *，在 printf 中无需取值。 此外，fgets 也可进行输入，不过输入流是 stdin 赋值方式： 定义时（初始化时），可以直接赋值。char A[] = \"This is a String\"; char B[] = {'H', 'I', '\\0'}; 除了定义时，其余任何时候，都不能通过数组名来直接赋值。 那么如何赋值？通常使用 strcpy(dest, str); C 语言字符串的最后必须包含一个隐藏的 '\\0' 作为字符串的末尾标识。在通过{}定义字符数组时如果没加，则在使用字符串相关函数时会可能溢出数组。 为什么字符串本质上作为一种字符数组可以在printf中直接通过传入数组名来输出呢？其他类型数组不行。因为 %s 要接收的类型就是 char *，而字符数组名在传入函数时会退化为指针，因此可以传入。 千万别忘 C 语言任何字符串的最后都有一个 '\\0'，在定义字符数组长度时千万要注意！例如名字最多有 4 个字，但是字符数组必须长度为 5，例如学号固定长度 10 位，字符数组必须长度为 11。strlen()函数不会算入 '\\0'。 1char s[3] = &quot;abc&quot; // 该语句无法执行。直接通过字符串来初始化时，会自动在其末尾添加 &#x27;\\0&#x27; 注意，C 语言中，char 类型只占 1 字节，这根本不够存储中文字符，在 UTF-8 下每个字符长达 3 字节。因此，在 C 语言中，中文字符不能用单个 char 来存储。同理，在字符数组构成的字符串中，如果该字符串要存储中文，切记不要把长度设定为要存储的中文长度，否则会超界。应该设为长度*3+1。 使用字符串相关函数如：strlen/strcat/strcpy/strcmp 时，记得加头文件 &lt;string.h&gt; 指针（极其易错 😭） 虽然数组名是一种特殊的指针常量，其包含一些数组信息，可以通过 sizeof(A)来获得整个数组的空间大小。但是，如果数组名传入函数当中，其会退化为普通指针，其不再包含数组信息，sizeof 只会获得指针本身的空间大小。（sizeof函数不会触发退化） 在 C 语言 中，普通变量（如 int a;）的内存地址是固定的，一旦分配，无法更改它的地址指向。 你可以改变 指针 的值，让它指向不同的变量，但你 不能改变变量本身的地址 。 swap(&amp;a, &amp;b) 交换的是 a 和 b 存储的值，但 a 和 b 本身在内存中的位置不会改变。要想实现传地址到函数，来修改普通变量的值，必须通过指针指向来修改值，不能改变指针本身，如果改变指针本身，修改的也只是传入的局部的指针（地址）变量，不会影响原有位置的值。 不能通过取地址符号 &amp; 获取普通变量地址之后修改普通变量的地址。普通变量的地址永远不变。&amp;a = &amp;b 是非法的。&amp;a 是不可变的。而 *a 是可变的。 注意对指针进行运算时，一定要先保证已经分配好指针指向的空间。int * a 只会分配指针的空间，不会分配指针指向的值的空间（int）。当通过 * a 来赋值给 a 指向的空间时，如果该空间没有被分配，则会报错。但是可以给 a 赋值一个已经分配好空间的 int 变量地址，如 int i; int * a; a = &amp;i; 但不可以 * a = i; int a 会分配 a 的空间，int * a 可不会分配，只会分配地址占用的空间。 再次强调：修改地址，是不会修改地址原先指向的值的，只会修改地址本身的指向，而普通变量的地址指向是没办法修改的，因此不可以通过修改普通变量的地址来实现修改普通变量的值。 运算 int/int会截断小数部分。 如果想得到精确运算，将其中一个操作数进行类型转换。(float)int. 浮点数进行比较时，不可直接用 == 运算符，应该用 a - b &lt; 1e-6 进行。 scanf()读取整行会中断在空格处，而 fgets 可以读取整行，但 fgets 会读取末尾的换行符。gets 也可以读取整行，且不会读取换行符，但是过时了。 ASCII 编码中，a-z、A-Z、0-9 都是按顺序编码的。因此单个字符可以通过比较来判断大小写和数字。将数字字符转为真数字，则可以通过 将字符减去 48 来实现。 在 printf 输出时，若要四舍五入输出浮点数保留到二位小数点，则 %.2f 会自动的四舍五入。 scanf 处理空白字符（空格、回车、Tab）时会自动跳过，不影响读取下一个数字。因此连续读取多个值可以通过 %d %d %d 来实现。 switch 的写法 123456789101112switch(c)&#123; // Switch 括号内可以写表达式，但 switch 只能处理整形结果（包括 char）\tcase &#x27;a&#x27;: // 可正常写多个语句和语句块 break; // 勿忘！\tcase &#x27;b&#x27;: break;\tcase &#x27;c&#x27;:\tcase &#x27;d&#x27;:\tcase &#x27;e&#x27;: // 多个 case 相同语句时的写法！！别写到一行里。\tdefault: ...&#125; // switch 可以不包含 default，但尽量加上。 C语言支持 -a 得到相反数。 在 OJ 评测中，C 语言若提前计算完毕要中途退出，最好用 return 0; 而不要用 exit()。 二维数组 A[i][j]中，A[0] 代表的是二维数组中第一个数组的==地址==。 C 语言中的常量（如 1、2、3、'a'、\"abc\"）是存储在只读区域，对其进行修改会导致错误。","tags":["计算机复试"],"categories":["学习"]},{"title":"金村快线 III 期规划公布","path":"/2025/02/12/金村快线 III 期规划公布/","content":"概览为进一步优化金村交通系统，提升出行效率，金村轨道交通有限公司正式公布金村快线第三期规划方案。普通线路全线将采用IFTs蓝冰悬浮轨道，设计时速达250km&#x2F;h。黄安线快速线路将采用金村研究院铁道中心自主研发的高速铁路，理论时速可达720km&#x2F;h。预计将于三季度投产。 背景目前，金村快线 2 号线全线开通运营。相比原先金村村际铁路，IFTs 最快可实现 8 倍行驶速度，实现了金台区人员与货运快速贯通。金村快线将进一步拓展覆盖范围，连通金村各大区域，推动区域经济一体化。 第三期规划路线金村快线第三期规划将覆盖金村市的多个重要行政区，包括金台区、新发地区、苜蓿区和七迹区等重点区域，在原先有限的金村村际铁路覆盖区域的基础上，进一步扩大金村轨道交通影响范围。本次规划新增线路设计时速仍保持 250km&#x2F;h，采用先进的 IFTs 蓝冰悬浮轨道技术，提供稳定、安静、平稳的乘车体验。 此次规划确定后将不再有大幅更改。随着金村快线建设与运营，将大幅提升新发地区和苜蓿区与其余地区的人员与货运往来，实现经济增速提升。 施工进度金村快线第三期项目预计将在本季度全面启动，计划分阶段建设。首阶段将完成金台区和新发地区的连接，预计在10季度后通车。 金村快线将持续致力于为市民提供更为便捷的出行选择，并不断完善城市轨道交通网络，助力金村的现代化发展。感谢大家的关注与支持！ 金村集团 金村轨道交通有限公司 金村轨道交通建设有限责任公司联合发布"},{"title":"Internet Protocol","path":"/2024/04/19/Internet Protocol/","content":"网际协议 IP概述 网际协议 IP 是 TCP&#x2F;IP 体系最主要的两个协议之一，也是最重要的互联网标准协议之一。 与IP协议配套的使用的还有三个协议： 地址解析协议 ARP 网际控制报文协议 ICMP 网际组管理协议 IGMP 如图： . 将ARP置于网络层最下面，因为IP经常要使用这个协议（ARP置于网络层和数据链路层之间）。ICMP和IGMP置于网络层最上面，因为它们要使用协议IP（作为IP层的SDU的一部分，使用IP层提供的服务）。 虚拟互联网络 为了实现网络互联，互通时需要解决许多问题。对于不同的网络，它们有不同的： 寻址方案 最大分组长度 网络接入机制 超时控制 差错恢复方法 状态报告方法 路由选择技术（部分网络有自己的路由转发，例如广域网） 用户接入控制 服务 管理与控制方式 解决不同网络之间的互联问题，有两种方案： 所有主机都使用相同的网络。这是不可能的，它不能满足不同用户的需要，没有一种单一的网络能够适应所有用户的需求。而且这也不适应技术发展。 使用中间设备。这才是正确的方案，可以满足不同需求。 中间设备有哪些种类呢？ 物理层使用的中间设备叫做 转发器（例如集线器） 。 数据链路层使用的中间设备有 以太网交换机、网桥、桥接器等 在网络层使用的中间设备叫做 路由器 。 在网络层以上使用的中间设备叫 网关 。用网关连接两个不兼容的系统，在高层进行协议转换。 注意，当中间设备是网桥或转发器等类似设备时，这仅仅是把一个单一的网络给扩大了，从网络层的角度看，这还是一个网络。 由于参加互联的计算机网络都使用相同的IP协议，因此可以把互联后的计算机网络看成一个虚拟互联网络，即逻辑互联网络。互联起来的各种物理网络的异构性是真实存在的，但是利用IP协议就可以使这些性能各异的网络在网络层上看起来像是一个统一的网络。利用IP协议形成的虚拟互联网络可简称为IP网，IP网是虚拟的。在覆盖全球的IP网之上使用TCP协议簇，就是现在的因特网。![[截屏2022-05-05 21.16.31.png]] !UNIMPORTANT 直接交付与间接交付。![[截屏2022-05-05 21.17.47.png]] IP 地址!IMPORTANT IP 地址及其表示方法 整个互联网就是一个单一的、抽象的网络。而IP地址，就是给连接到互联网上的 每一台主机（或路由器）的 每一个接口 ，分配一个 在全世界范围内是唯一 的 32位 的标识符。IP地址的结构可以使我们很方便的在互联网上进行寻址。IP地址现在由互联网名字和数字分配机构ICANN分配，而且是分级分配。 IP地址都是32位的二进制代码。它的表示形式常常由等效的10进制数字表示，每8位二进制为一段，并且在每段数字之间加一个小数点，即 点分十进制记法 。 IP地址不仅标志了某个主机（或路由器），还标志了某个网络（子网）。因此IP地址采用两级结构， 由两个字段构成 ： 网络号。标志主机（或路由器）所连接到的网络。一个网络号在整个互联网范围内必须是唯一的。 主机号。标志该主机（或路由器）。一个主机号在所连接的网络内必须是唯一的。 IP 地址指明了 连接到某个网络上的一个主机或路由器。 IP地址的前n位为网络号，后32-n位为主机号。n取决于IP地址的编址方式。![[截屏2022-05-05 21.54.11.png]] 分类的 IP地址 分类的IP地址应用在早期的互联网。分类分为ABCDE类。 A类（n&#x3D;8），B类（n&#x3D;16），C类（n&#x3D;24）。这些地址都是单播地址（一对一通信），是最常用的。D类是多播地址（一对多通信）。E类是保留地址。![[截屏2022-05-05 21.56.52.png]] 如果给出一个二进制数表示的IP单播地址，则很容易就可以看出该地址属于哪一类，同时也能分辨网络号和地址号部分。 A类地址的网络号占1B，并且只有7位可以使用，第一位已经固定为0。注意特殊情况：网络号全为0的IP地址表示本网络；网络号为01111111即127的IP地址作为本地软件回环测试之用。因此A类地址的网络号是126个。 全0和全1的主机号一般不指派。全0的主机号表示该IP地址是本主机所连接到的单个网络的 网络地址 （应该可用作标识网络）。全1表示所有的，即表示该网络下所有的主机。因此各个类网络下的最大主机数应该在总数-2。 一般不使用的特殊IP地址：![[截屏2022-05-05 22.09.34.png]] 网络号为0，主机号为X，则可以表示在本网络上主机号为X的主机。 全1，在本网络广播。 分类的IP地址，管理简单、使用方便、转发分组迅速。但是互联网发展迅速，IP快没了，分类的IP地址显现出了巨大的弊端：向组织或学校等分配IP地址网络号时，A类地址太多，而B类又太少不够，因此只能分配A类，造成了巨大的浪费。因此出现了一种新的无分类编址方法 CIDR 。 无分类编址 CIDR CIDR 无分类域间路由选择 。 CIDR 有三个要点： 网络前缀 CIDR 把网络号改称为 网络前缀 ，用来指明网络，剩下的后面部分仍然是主机号，用来指明主机。 网络前缀的 位数n不是固定的数 ，而是 可以在0-32之间任意选取 的值。 斜线记法(CIDR 记法) ：在IP地址后面加上斜线’&#x2F;‘，斜线后是网络前缀所占的位数。 地址块 CIDR 把网络前缀都相同的所有连续的IP地址组成一个 CIDR 地址块 。 一个 CIDR 地址块包含的IP地址数目，取决于网络前缀的位数。 只要知道 CIDR 地址块中的任何一个地址，就可以知道这个地址块的起始地址和最大地址，以及地址块中有几个地址（可指派的地址数记得要减2）。 我们常使用地址块的最小地址（主机号为0）和网络前缀的位数指明一个地址块。 也可以用二进制代码简要地表示地址块：网络前缀的二进制数*。例如 10000000 00001110 0010* 就代表了128.14.32.0&#x2F;20。这里的星号表示了主机号字段的所有0。在不需要指明网络地址时，也可把这样的地址块简称为&#x2F;20地址块。 几种表示法的注意： 128.14.32.7 是单一的IP地址，但是没有指明网络前缀位数，无法获取网络地址。 128.14.32.7&#x2F;20 也是单一的IP地址，因为主机号并不是全0。指明了网络前缀位数，因此可以获取网络地址。 128.14.32.0&#x2F;20 才是包含多个IP地址的地址块或网络前缀，同时也是这个地址块中主机号全为0的地址。可以省略十进制表示法中的最后的0，简写为128.14.32&#x2F;20。 要想指明网络地址，就必须在IP地址中指明网络前缀的位数。 地址掩码（子网掩码） 32位的 地址掩码 能够使计算机从IP地址快速算出网络地址。 地址掩码（可简称为掩码）由一连串1和接着的一连串0构成，而1的个数就是网络前缀的长度。在CIDR记法中，斜线后面的数字就是地址掩码中1的个数。 把二进制的IP地址和地址掩码进行按位与计算，即可得出网络地址。 常用的CIDR地址块![[截屏2022-05-06 15.34.28.png]] 每一个CIDR地址块中的地址数一定是2的整数次幂。当网络前缀位数大于24时，CIDR地址块都包含了多个C类地址，因此有时称CIDR编址为构造超网。 CIDR 有3个特殊的地址块： 前缀n&#x3D;32。没有主机号，就是一个特殊的IP地址，用于主机路由。 前缀n&#x3D;31。这个地址块中只有两个IP地址，其主机号分别为0和1。这个地址块用于点对点链路。 前缀n&#x3D;0。同时IP地址也全是0，即0.0.0.0&#x2F;0。者用于默认路由。 使用CIDR，可以更加灵活有效地分配IP地址空间，可根据客户需要分配适当大小的CIDR地址块。 路由聚合 ：一个大的CIDR地址块包含许多小CIDR地址块，所以在路由器的转发表中就利用较大的一个CIDR地址块来代替许多小的CIDR地址块(找网络，而不是找具体的主机)。这种方法称为路由聚合，它使得转发表中只用一个项目就可以表示原来传统分类地址的很多个路由项目，因而大大压缩了转发表所占的空间，减少了查找转发表所需的时间。 IP地址的特点 每一个IP地址都由网络前缀和主机号两部分组成。也就是说， IP地址是分等级的 。分两个等级的好处是： IP地址管理结构在分配IP地址时只分配网络前缀，而剩下的主机号则由得到该网络前缀的单位自行分配。方便了IP地址的管理。 路由器根据目的主机所连接的网络前缀来转发分组， 不考虑目的主机号 ，这样可以使转发表中的项目数大幅减少。减少存储占用，缩短查找时间。 实际上， IP 地址是标志一台主机（或路由器）和一条链路的接口 。 多归属主机：当一台主机同时连接到两个网络上时，该主机就必须同时具有两个相应的IP地址，其网络号必然是不同的。这种主机称为多归属主机。 一个网络是指具有相同网络前缀的主机的集合，因此，用转发器或交换机连接起来的若干个局域网仍为一个网络，它们都具有相同的网络前缀。 互联网同等对待每一个IP地址。 路由器总是具有两个或两个以上的IP地址。即 路由器每个接口的IP地址的网络前缀都不同 。同一个网络的主机或路由器端口的IP地址中的网络号必须一样。 当两个路由器直接相连，在连线两端的接口处，可以分配也可以不分配IP地址。如果分配了IP地址，则这一段连线就构成了一种只包含一段线路的特殊网络（叫网络是因为有IP地址）。这种网络仅需两个IP地址，因此这里就使用了&#x2F;31地址块。这种地址块专门为点对点链路的两端使用，主机号只有2种可能，0和1。但为了节省IP地址资源，对于这种网络，常常不分配IP地址。 IP 地址与 MAC 地址 MAC地址常称为物理地址&#x2F;硬件地址，对应的，IP地址也被称为虚拟地址&#x2F;软件地址&#x2F;逻辑地址，IP地址是用软件实现的。 从层次的角度看，MAC地址是数据链路层使用的地址，IP地址是网络层和以上各层使用的地址，是一种逻辑地址。 在发送地址时，数据从高层向低层，然后在链路上传输。使用IP地址的IP分组交给数据链路层之后，就被封装成MAC帧。MAC帧在传送时使用的源地址和目的地址都是MAC地址，这两个MAC地址都写在MAC帧的首部中。 连接在通信链路上的设备在收到MAC帧时，根据MAC帧首部中的MAC地址决定收下或丢弃。只有在剥去MAC帧首部和尾部后，把MAC层的数据上交给网络层后，网络层才能在IP数据报的首部中找到源IP地址和目的IP地址。 交换机是数据链路层设备，只有MAC地址，没有IP地址，最高只有链路层，没有网络层。因此在网络层看时，交换机可以当做不存在。 注意： 在IP层抽象的互联网上只能看到IP数据报。在IP分组传输的过程中，虽然要经过多个路由器的转发，但是在IP分组的首部中， 源IP和目标IP永远不变 。经过的路由器并不会出现在IP分组中。 对于路由器来说，源IP地址是没用的。 路由器只根据目的站的IP地址进行转发 。 在局域网的链路层，只能看到MAC帧。MAC帧在不同网络上传送时，其MAC帧首部中的源地址和目标地址要发生变化。当一台局域网内的主机向别的网络内的主机发送数据时，MAC帧首部中源地址就是自己，而目标地址是该局域网的路由器的MAC地址（MAC帧到达交换机后，会根据MAC地址，决定转发到接路由器的端口）。到达路由器后，在网络层抽出IP分组，获得目标IP地址，查询转发表，获取下一跳的目的地和对应的转发端口，（光查询，并不更改IP分组内的IP头）然后下到链路层，再加上链路层的首部，此时源MAC地址是路由器的MAC地址，目标地址是下一跳的MAC地址。 尽管互连在一起的网络的 MAC 地址体系各不相同，但 IP 层抽象的互联网却屏蔽了下层这些很复杂的细节。只要我们在网络层上讨论问题，就能够使用统一的、抽象的 IP 地址研究主机和主机或路由器之间的通信。 在网络层下到数据链路层时，为了根据目标IP地址获取数据链路层传输所需要的目标MAC地址，需要运行ARP协议。 地址解析协议 ARP实现IP通信时使用了两个地址：IP地址和MAC地址。而实际上用于链路传输的是MAC地址。在传输时，必须将目标IP地址转换为在当前网络内通往该目标IP方向的MAC地址。这就用到了ARP协议。（注意ARP运行在每一台主机或路由器，每一台主机或路由器都有自己的ARP高速缓存；而以太网交换机的自学习算法是处在中心的。） ARP 运行步骤 每一台主机都设有一个 ARP高速缓存 ，里面存有 本局域网（注意映射只在本局域网有效） 上的各主机和路由器的IP地址到MAC地址的映射表，这些都是该主机目前知道的一些MAC地址。 当主机A要向本局域网上的某台主机B发送IP数据报时，就先在其ARP高速缓存中查看有无主机B的IP地址。 若有，就在ARP高速缓存中查出其对应的MAC地址，再把这个MAC地址写入MAC帧，然后通过局域网把该MAC帧发往此MAC地址。 若没有，（有可能是B才入网，也有可能是A才加电）主机A就自动运行ARP，然后按以下步骤找出主机B的MAC地址： ARP进程在本局域网上广播发送一个ARP请求分组。该分组的主要内容包含 发送方的硬件地址、发送方的IP地址、目标方的硬件地址（此时未知，填0）、目标方的IP地址。意思就是：我的IP地址是XXX，MAC地址是YYY，我想知道IP地址为ZZZ的主机的MAC地址。 在本局域网上的所有主机上运行的ARP进程都收到此ARP请求分组。路由器不会转发ARP请求。 主机B的IP地址与ARP请求分组中要查询的IP地址一致，就收下这个ARP请求分组，并向主机A发送ARP响应分组，同时在这个ARP响应分组中写入自己的MAC地址。其他主机发现ARP请求分组内要查的IP不是自己就都不理会。（ARP响应分组是单播的，从一个源地址发送到一个目的地址。它包含 发送方的硬件地址、发送方的IP地址、目标方的硬件地址、目标方的IP地址。意思就是：我的IP地址是MMM，我的MAC地址是CCC。） 主机A在发送ARP请求分组时，会把自己的MAC和IP地址写入ARP请求分组。当主机B收到A的ARP请求分组时，就把主机A的这一地址映射写入主机B自己的ARP高速缓存中。这样B在以后向A发送数据报时就很方便了。 主机A收到ARP响应分组后，就在其ARP高速缓存中写入主机B的IP地址到MAC地址的映射。 ARP对保存在高速缓存中的每一个映射地址项目 都设置生存时间 。凡超过生存时间的项目就从高速缓存中删除掉，以保证映射的正确。 注意： ARP用来解决 同一局域网上 的主机或路由器的IP地址和MAC地址的映射问题。 如果所要找的主机H2和源主机H1不再同一个局域网上，源主机就无法解析出另一个局域网上的目标主机的MAC地址。但实际上， 源主机也不需要知道异构网络的目标主机的MAC地址。 主机H1发送给主机H2的IP分组，首先需要通过H1连接在同一个局域网上的路由器R1进行转发，主机是知道路由器的IP地址的，因此主机H1需要知道的是路由器R1的IP地址对MAC的映射。 H1使用ARP把路由器R1的IP地址解析为路由器的MAC地址，然后把IP分组发出，这时链路会把分组发送到路由器R1。以后R1在网络层通过转发表知道应该把IP分组转发到哪个网络结点，再使用ARP解析出该结点的MAC地址，然后到达链路层加到MAC帧头部然后发出，以此类推，最后一跳由目标主机的路由器解析出目标主机的MAC地址。也就是说，ARP只会把IP地址解析到当前网络的某个设备的MAC地址，而不会把地址解析到最终目的的MAC地址，这是没必要的，也是没可能的，MAC地址是运用在同一个网络内的，只要在同一网络内知道下一跳的地址即可（路由器端口也属于网络内），要传往不在同一个网络的主机只需要转发给路由器，一切交给网络层就行。 ARP协议是自动运行的，主机的用户对这种地址解析过程是不知情的。 ARP的四种典型情况 发送方是主机，要把 IP 数据报发送到本网络上的另一个主机。这时用 ARP 找到目的主机的硬件地址。 发送方是主机，要把 IP 数据报发送到另一个网络上的一个主机。这时用 ARP 找到本网络上的一个路由器的硬件地址。剩下的工作由这个路由器来完成。 发送方是路由器，要把 IP 数据报转发到本网络上的一个主机。这时用 ARP 找到目的主机的硬件地址。 发送方是路由器，要把 IP 数据报转发到另一个网络上的一个主机。这时用 ARP 找到本网络上另一个路由器的硬件地址。剩下的工作由这个路由器来完成。 有了MAC地址还要IP干啥 全世界存在着各式各样的网络，它们使用不同的MAC地址。要使它们能够互相通信就必须进行非常复杂的MAC地址转换工作，因此由用户或用户主机来完成这项工作几乎是不可能的事。即使是对分布在全世界的以太网MAC地址进行寻址，也是极其困难的。然而IP编址把这个问题解决了。路由器可以转换不同网络类型的MAC帧？ 即使必须多次调用ARP来找到下一跳MAC地址，但这个过程对用户来说是无感的。 IP 数据报的格式 一个IP数据报由首部和数据两部分组成。 首部的一部分长度是固定的，共20字节，是所有IP数据报所必须具有的。在首部的固定部分的后面是一些可选字段，其长度是可变的。 IP分组的首部长度 必须是4B的整数倍。 如果不是4B的 整数倍，必须有填充字段加以填充。 整个首部的 最长长度为60Byte。 一般情况下首部就20B，即不使用可变首部。 具体格式：![[截屏2022-05-12 19.23.17.png]] !!IMPORTANT 各个字段： 4b 版本字段：协议IP的版本。通信双方所使用的IP协议的版本必须相同。 4b 首部长度字段：表示首部的长度。注意，首部长度字段所表示数的单位是32b。首部长度字段最小为0101，代表只有固定首部部分，没有可变首部，总长度为5*32b&#x3D;20B；最大为1111，代表首部总长15*32b&#x3D;60B。 8b 区分服务字段：用于获取更好地服务。只有在区分服务时这个字段才起作用。 16b 总长度字段：首部和数据之和的长度，字段单位为字节。可得出IPv4数据报最大长度为216 -1&#x3D; 65535字节。 注意，IP数据报的长度要遵守低层的MTU限制。如果超了，则需要把过长的数据报进行分片处理。 IP协议规定，所有主机和路由必须能够接受长度≤576B的数据报。 分片过后，总长度字段的值是分片后每一个IP分片的长度。 16b 标识字段：IP软件在存储器中维持一个计数器，每产生一个数据报，计数器就加 1 ，并将此值赋给标识字段。注意这并不是序号，IP是无连接的，不存在按序接收的问题。标识字段的作用体现在当IP数据报需要被分片时，其标识字段会被复制到所有的数据报片的标识字段中。相同的标识字段使得分片后的各数据报片能够正确重组。 3b 标志字段：目前只有两位有意义。 低位为MF(More Fragment)。MF&#x3D;1代表后面还有分片的数据报。MF&#x3D;0表示这已经是若干数据报片的最后一个。 中位为DF(Do not Fragment)。DF&#x3D;1时不允许该数据报被分片，DF&#x3D;0时允许分片。 13b 片偏移字段：数据报被分片后，各个分片在原数据报中的相对位置。片偏移以8B为偏移单位，这也就是说，除最后一个数据报片外，其他每个分片的长度一定是8B的整数倍。例如：![[截屏2022-05-12 19.56.38.png]] 其中，每个分片的标识字段都相同，就是原先未分片的数据报的标识字段。 如果分片后还要再分，那么新分片的片偏移依旧是相对于最原先的数据报。 各个分片字段的变化：![[截屏2022-05-12 20.06.02.png]] 8b 生存时间字段 TTL ：数据报在网络中的寿命。目的是防止IP数据报兜圈子。以前的单位是时间，而现在的单位是 跳数 ，TTL字段的功能也就变成了 跳数限制 。路由器在每次转发之前就把TTL减1。若TTL减小到0还没有到达目标则丢弃该数据报。TTL长8位，因此最大跳数为255。 8b 协议字段：指出此数据报携带的数据使用何种协议，让目的主机知道应该将数据部分上交给哪个协议。![[截屏2022-05-12 20.16.11.png]] 16b 首部校验和：只检验数据报的首部，不包括数据部分。数据报每经过一个路由器都会重新计算一下首部校验和（一些字段会发生变化）。使用网际校验和算法。 32b 源地址 32b 目的地址 可变首部：就是一个选项字段，用于支持排错、测量以及安全等措施。长度可变，最短1B，最长40B，最后用全0来填充以保证4B的整数倍。","tags":["计算机网络"]},{"title":"欢迎来到 金村快线 2 号线","path":"/2024/04/13/金村快线 2 号线/","content":"金村快线 2 号线 全线开通路线与站点图 金村快线 2 号线连通 金村·中北木 园区 与 金村国际机场，途径 金村交通枢纽 —— 金村客运中心，与 金村互联网与大数据基地 —— 金村信息中心，大幅加强金村交通承载能力。 全新 IFTs 轨道IFTs(Ice Float Train Singularity) ，即搭配 单边式 蓝冰悬浮轨道的船式列车。相较 金村·天际线和机场快线配备的 IFT+ 轨道，铺设成本下降 70%，且速度基本保持不变（250km&#x2F;h） 站点信息北木村西口是 金村快线 2 号线 起始站。位于北木村正西侧，可直接到达 金村·中北木 园区。周边可换乘 金村村际铁路，前往 大椭球 风景区。 高物试验场西口可前往国家级高能物理试验中心。周边可换乘 金村村际铁路 。可到达试验场员工区。 新罗北新罗村北口。 金村客运中心金村交通枢纽。可换乘 金村村际铁路 、金村无轨电车 、金村长途（跨区）铁路 以及 金村·天际线 。 金村信息中心金村互联网与大数据中心。 符角工业区可前往 符角工业区 、中央时钟 。 金广台 金村光源大厦 金村集团 金台办公区 金村国际机场 可直接前往 金村国际机场 T1 航站楼 ，可换乘 金村村际铁路 、 机场快线 1|2 号线 。 可直接前往 大北村·金村机场共享住房区域 ，配备上万个住宿单元。 距离 津城驻金村大使馆 仅 300m 。","tags":["虚构","Minecraft"]},{"title":"关于 Xcode 15 在 iOS 设备上真机调试的坑","path":"/2024/03/05/关于 Xcode 15 通过非开发者账号在 iOS 设备上真机调试的坑/","content":"结论首先，给出结论：至今（2024.3.5）为止，Xcode 仍然允许非开发者账号（免费账号）在真机上运行你开发好的 App。 坑 0：选择了 CloudKit 和 Mac 起初无法签署，以为是 坑 1：免费账号签署的限制 Xcode 可以通过免费账号让你的 App 被签署，并安装在你的 iOS 设备上来进行调试。但是这是有限制的。 Xcode 会在你使用免费账号签署时，自动创建一个名叫 Xcode Managed Profile 的 Provision Profile。它有 7 天的有效期。毕竟只是调试。 如果你使用免费账号部署你的 App 到你的真机上，一般可能会出现 2 条错误，即 免费的 Provision Profile 有以下 3 个不允许 App 调用的功能，或者说服务： In-App Purchase(IAP) 即应用内购 iCloud 相关的云存储 Push Notifications 通知推送 以上这三个服务，似乎默认都是关闭的。坑就坑在两点： 我在创建项目时，选择了 CloudKit 来存储数据 我在创建项目时，选择了 3 个平台：Mac、iPhone、iPad 也就是说，如果你想用免费的证书让你的 App 运行在真机上，你必须砍掉以上三个功能。 砍掉的方法很简单，只需要在 TARGETS -&gt; 你的应用 -&gt; Signing &amp; Capability 页面中，在对应功能栏最右侧点击 删除 图标即可 坑 2：删不掉的 Push Notifications iCloud"},{"title":"图片负载测试","path":"/2023/08/18/CDN 下的媒体负载测试/","content":"一直不太理解 CDN 的原理。按照网上的解释，CDN 会将服务器内容自动缓存到世界各地，那也太费资源了。而且，如果离我最近的服务器就是我服务器本身，那 CDN 是不会缓存到离我最近的其他服务器的吗？好像并不是。我服务器是小水管，经过 CDN 加速后，即使是离源服务器很近的用户进行访问，图片加载速度也会大幅提升。 突然知道了 Cloudflare CDN 服务器在国外，加上以后，网站可能会更慢…… 经过 ESRGAN 4 倍放大的插画，大小 33.3MB 插画（6.8MB）","categories":["测试"]},{"title":"使用 Git 配合 Hexo 实现本地编辑云端博客","path":"/2023/08/09/使用 Git 配合 Hexo 实现本地编辑云端博客/","content":"注意：该文章内容可能存在错误。 本博客尚未配置 CDN ，图片可能加载较慢。 使用 Git 云端仓库 配合 Hexo 实现本地编辑云端博客。 起初，使用自己的云服务器，配置了 Hexo 博客。然而 Hexo 有一个很不好的点，就是新增和编辑博客非常麻烦。一开始想通过 SSH 来实现实时同步，同时使用 Obsidian 来对博客目录进行操作。然而，Obsidian 并不支持使用自己的 SSH 服务器，也没有支持的插件。VSCode 可以，但是并不想用 VSCode 来编写 MarkDown 文件，因为其没有实时预览。后面又想到使用 macOS 的访达连接 FTP 服务器，但是不知道为什么 macOS 抽风，FTP 一直连不上，SMB 也连不上，实际上，我从来没成功用访达连接成功过任何云服务器。 后来没有办法，只能使用 Hexo Admin 凑活用。 后来想到了 Git 。Git 是一种版本控制工具，它本不是用来进行文件同步的，而是进行分布式开发的。但是，我们可以利用 Git 的远程仓库，以及 Crontab 自动执行命令，自动拉取更新，来实现客户端编辑好后 push ，云端工作目录自动 pull ，从而更新博客。 Git 部分 注意区分 Git 仓库和 Obsidian 仓库。该章节下所有仓库指的都是 Git 远程仓库，Obsidian 仓库在此章节下说明为 Obsidian Vault 。 创建裸远程仓库 对于远程仓库，一般创建的都是裸仓库。因为我们没有必要在远程仓库内部对仓库内容进行更新，这是专用于客户端工作目录进行操作的仓库。 关于裸远程仓库，可以看看我的关于 Git 的博客：Git 使用提醒 创建仓库的位置最好放在博客目录外，仓库名设置为 source.git ，这是为了在 Hexo 中 clone 名字为 source 的仓库，source 即 Hexo 博客的内容。其他名称无法将博客内容 add 到仓库中。 git init --bare source.git 移出 Hexo 博客内容（source 目录） 之前已经在 Hexo 中发布过一些内容。因为我们要将这些内容添加到新仓库中，唯一的做法就是先把原先内容（整个 source 目录）移出到其他目录下，然后在 Hexo 目录下 clone 一个名叫 source 的仓库，再将原博客内容移入。 mv hexo/source hexo/backup_source 在云端的 Hexo 博客根目录下通过 clone 创建新的 source 目录 将刚刚创建的云端仓库，在云端服务器的 Hexo 博客目录下，进行 clone ，创建新的 source 目录。 git clone source.git 将原先的 source 目录内容移入新 source 目录mv hexo/backup_source/* hexo/source/ 使 source 下的文件被 Git 追溯git add . 提交并推送git commit -m &#39;init&#39;git push 配置服务端自动拉取更新 这里采用的方法是 Crontab ，实际上这个方法个人觉得不是太适合。 crontab -e然后编写：*/1 * * * * cd 你的source工作目录;git pull保存并退出 Obsidian 部分在客户端 clone 云端仓库git clone 用户@IP地址:source.git远程仓库位置 注：需要提前配置好 SSH 及其免密登陆，以及专用于更新博客的 Git 用户。 用 Obsidian 打开 clone 好的工作目录File - Open Vault 选择打开，选择刚刚 clone 好的工作目录 进入 Obsidian Obsidian 安装 Obsidian Git 插件 简化客户端博客推送流程 Obsidian 有一个第三方插件，叫 Obsidian Git，该插件在 Obsidian 内置了 Git 命令。 只需要打开的 Obsidian Vault 为一个正常的 Git 工作目录（包含 .git 文件夹），就可以直接使用这个插件执行 git 命令。 似乎这个插件没有 git add，而直接 git commit 便可以。 当博客内容有新变化时，便可以按下 Command + P 打开 Obsidian 命令面板，输入 git commit 查找到该插件的操作，回车即可。 推送时和 commit 一样。 创建笔记模版 来自 https://segmentfault.com/a/1190000042111566?sort=newest 为了在 Obsidian 创建笔记时，方便添加 Hexo 的 Front-matter，可以在 Obsidian 中创建模版。 在本地工作目录下，创建 _obsidian 目录，并在目录下新建 Post Template 文件，格式为 md 。最好在 Obsidian 内新建该文件。在文件内添加内容： 123456---title: &#123;&#123;title&#125;&#125;date: &#123;&#123;date&#125;&#125;author: 你的作者名称tags: []--- 然后进入 Obsidian 设置 - 核心插件 - 模版 将其打开，然后点击切换按钮旁的设置按钮，进入模版设置。 在模版设置下，将相关设置改为： 模版文件夹位置内容为 _obsidian 日期格式为 YYYY-MM-DD HH:mm:ss 之后新建新博客时，只需要点击 Obsidian 侧边栏的 插入模版 按钮即可。 修改 Obsidian 媒体链接格式 Obsidian 默认拖入的媒体文件，在笔记内的链接格式是 Wiki 链接。 为了 Hexo 主题进行正确识别媒体链接，需要将 Obsidian 设置中的 使用 Wiki 链接 关闭。 修改 Obsidian 的附件默认存放路径 Obsidian 默认新添加的附件存储在 Obsidian Vault 的根目录，我们需要将附件文件夹路径修改为 Hexo 的附件位置。 除此之外，还需要将 内部链接类型修改为 基于仓库根目录的绝对路径。 现在，你可以直接将本地的附件，粘贴到 Obsidian 笔记中，Obsidian 会自动将附件复制到附录文件夹下，并在笔记中给出正确的链接路径。 但是，Obsidian 给出的链接路径，在 Hexo 中无法找到，需要在链接头部多加一个 ‘&#x2F;‘ 才能在 Hexo 中正确找到。 目前状态 目前的体验还不错，但是还有一些问题： Crontab 每隔一分钟拉取，每次推送完得等一等才更新，在未来或许可以使用 Git 远程仓库自带的 Hooks 来实现即时 pull ； Obsidian 新添加的附件，在经过相关设置后，笔记内的附件链接几乎完美，但是有一个缺点就是需要在链接头部加一个 ‘&#x2F;‘，要不然 Hexo 找不到，这个经常忘记 😓。"},{"title":"Git 使用提醒","path":"/2023/08/09/Git 使用提醒/","content":"Git bare repo 裸仓库指的是创建一个隐形的本地仓库，并不会创建git工作目录，而只是会创建git版本信息文件在当前目录下。这种仓库专门用于push和pull，而在创建该仓库的Git服务器则看不到工作目录，Git服务器只有版本控制相关信息。要想浏览和修改仓库内容只能通过push和pull。这种仓库专用于远程仓库，在这种仓库下，不允许Git服务器对该仓库做各种git操作，只允许clone该仓库再对cloned仓库做操作。 如果想在 non bare 仓库中进行远程 push ，则需要在 Git 服务端进行相关配置。 non bare 仓库只是不允许进行远程 push 到服务端的当前分支，但是支持 push 到其他分支。 注意：在仓库中进行过文件修改，包括新建、修改、删除，一开始并不被Git追溯，也就是说Git压根不管这次修改。你需要首先将其git add到Git仓库中。 git push 后，远程仓库就会直接更新文件吗？ Git 的核心并不是工作目录，而是版本控制信息，即.git目录。远程仓库中的远程指的便是这些信息和内容一起存储的位置在云端。创建仓库类型分为bare和non-bare。前者创建的仓库，不包含自带的工作目录，只有版本信息，不允许在远程仓库本身对仓库直接进行操作，也无法直接看到仓库的内容，只能通过其他开发者对其进行clone来进行操作。后者创建的仓库会以当前目录为工作目录，该远程仓库本身可以对其进行git操作，但默认不允许其他开发者进行push。 工作目录和远程仓库应该是分开的。远程仓库本身只包含版本信息和编码化的内容，工作目录不应该和远程仓库在一个目录下。 如果拥有一个远程工作目录，那么当push过后，远程工作目录并不会变化，变化的是远程仓库的内容，需要在远程工作目录内pull。 现有文件创建远程git仓库的最好办法，就是先在别的文件夹下创建bare git仓库，然后再在现有文件目录下git clone创建的仓库，然后git add .。克隆的git仓库名无法更改，因此需要将现有文件先备份，然后重新新建仓库，仓库名与现有文件所在目录名相同。 远程仓库本身和clone好的工作目录是不同的。虽然都有个.git。 bare 远程仓库并没有.git，在远程仓库内无法对仓库进行操作。即使是non bare，有了.git，它和git工作目录还是有区别的。 当某一用户push了之后，远程仓库便会更新。关键在于，远程仓库clone下的工作目录肯定是不会变化的。也就是说，当某一用户push了之后，不会有任何工作目录发生变化，变化的只有远程仓库的内容。只有重新clone或pull后才能在工作目录显现变化的内容。 实际上，Git远程仓库就是Git服务器，它是核心，任何用户的push都会提交到其中，且任何用户都能pull到其中的内容。Git远程仓库在没有clone时，是看不到其内容的，其内容是被编码化存储在远程仓库文件夹内。 如果想实现某一个客户端自动拉取最新代码，可以使用 Crontab ，每隔几分钟进行一次拉取。或者可以使用 Git hooks 。这样便可以做到利用 Git 来实现项目自动更新。 upload successful","categories":["笔记"]},{"title":"考研院校","path":"/2023/08/08/考研院校/","content":"大连理工大学 985 经验贴：https://baijiahao.baidu.com/s?id=1763583753154694560&amp;wfr=spider&amp;for=pc 电子信息与电气工程学部 计算机技术 专业学位 初试科目： 数学一 英语一 数据结构 810 （自命题调剂困难） 复试专业科目： 《C程序设计》(第三版)，谭浩强，清华大学出版社； 《C语言程序设计教程》(第二版)，孟宪福，王旭，电子工业出版社。 《数据库系统概论》（第四版），王珊，萨师煊，高教出版社。 《软件工程》（第五版），张海藩，清华大学出版社。 《计算机系统结构教程》（第1版），张晨曦，王志英，沈立，刘依；清华大学出版社。 北京科技大学 211 计算机与通信工程学院 计算机技术 专业学位 初试科目（67%）： 数学一 英语一 计算机综合一 871 （含计组、数据结构） 复试科目（33%）： 笔试（计算机综合，包括软件工程、系统结构、操作系统） 机试（编程能力测试） 面试 华北电力大学 211计算机技术 控制与计算机工程学院 计算机技术 专业学位 初试科目： 数学二 英语二 408 复试科目（二选一）： 数据库原理 计算机组成与结构 软件工程 控制与计算机工程学院 软件工程 专业学位 初试科目： 数学二 英语二 843 软件工程专业基础综合（含数据结构和操作系统） 复试科目同计算机技术 中国人民公安大学 双一流 大数据技术与工程 专业学位 初试科目： 数学二 英语二 826 计算机网络和 C 语言程序设计 复试科目： 程序设计 英语笔试 专业笔试 中央民族大学 985专硕分数线较高 信息工程学院 电子信息 专业学位，分数线较高 初试科目： 数学二 英语二 852 信息与系统或数据结构 复试科目： 专业笔试 综合面试 学硕分数线较低 信息工程学院 软件工程 学术学位 初试科目： 数学一 英语一 857 软件工程专业综合 复试科目： 专业笔试 综合面试 东华大学 211 计算机科学与技术学院 计算机技术 专业学位 初试科目： 数学二 英语二 854 计算机及软件工程专业基础综合（含 数据结构 和 数据库系统原理） 复试科目： C&#x2F;C++ 数据结构算法 机试 综合面试 江南大学 211 人工智能与计算机学院 计算机技术 专业学位 初试科目： 数学二 英语二 851 算法与程序设计（含 数据结构 计算机算法设计 程序设计基础（C&#x2F;C++）） 复试科目： 机试 笔试（计算机操作系统、离散数学、数据库原理及应用、计算机组成原理） 综合面试 山西大学 双一流 计算机与信息技术学院 计算机技术 不接受跨考 专业学位 初试科目： 数学二 英语二 876 数据结构 + C 程序设计 复试科目： 数据库原理 上机考试 面试 太原理工大学 211 信息与计算机学院 计算机技术 专业学位 初试科目： 数学二 英语二 833 数据结构 + 计算机组成原理 复试科目：","tags":["将来"],"categories":["笔记"]},{"title":"央国企双非计算机本科校招调研","path":"/2023/08/01/央国企双非计算机本科校招调研/","content":"国家电网（计算机类）报考流程： 报名 网申 笔试 面试国家电网电工类机会较少，尤其对于双非计算机本科，大概率网申都过不了。对于热门城市更加困难。 中信集团（研究生及以上）只允许硕士研究生及以上。 中国铁路全国各地都有。https://rczp.china-railway.com.cn/page/recruitment/rec_info.html 中国星网目前岗位都为硕士研究生起步。 三大运营商中国铁塔三桶油银行政策行：国开行 农发行 进出口银行国有行：中农工建交邮中国银行：在9月初发布招聘公告，截止时间10.14，本科及以上，有信息科技管培生。招聘公告：https://www.boc.cn/aboutboc/bi4/index_1.html 中国农业银行：在9月初发布招聘公告，截止时间10月14日，本科及以上。微信公众号：中国农业银行人才招聘。 中国工商银行：目前官网只有去年的春招公告。招聘公告：https://job.icbc.com.cn/pc/index.html#/main/school/home/announ 中国建设银行：在9月初发布招聘公告，截止时间10月12日招聘公告：http://job1.ccb.com/cn/job/mobilev3/notice.html 交通银行：招聘公告：https://job.bankcomm.com/getCallboard.do 邮政储蓄银行：报名截止时间10月9日2023招聘公告：http://psbc2023.zhaopin.com 华电煤业集团https://mp.weixin.qq.com/s/pfAo0cVxfM18tU7MpR-OJg 中航信五矿集团中核七院"},{"title":"调研","path":"/2023/07/19/大学硕士调研/","content":"北京科技大学学院：计算机与通信工程学院专业：计算机科学与技术（学硕）招生人数：23初试科目（67%）：11871（数一、英一、计算机综合一，含计算机组成原理、数据结构）复试线：300复试科目（33%）：549（计算机综合二，包含系统结构、操作系统、软件工程）包括 机试（算法与数据结构）、笔试（计算机综合）、面试（包含专业抽题、外语口语、综合素质）参考：http://scce.ustb.edu.cn/jiaoyujiaoxue/yanjiushengpeiyang/yanjiushengzhaosheng/2023-03-21/1973.html 中国科学院信息工程研究所专业：网络空间安全招生人数：121（似乎含推免）初试科目（50%）：11408复试线：300&#x2F;284复试科目（50%）：重点考核考生的英语听说能力、思维能力、专业知识结构、个人素质、科研潜力、表达能力等。复试形式以面试为主，辅以机试、笔试。参考：https://www.zhihu.com/question/523174734/answer/2558147338http://www.iie.cas.cn/xsjy2020/zsxx2020/sszs2020/202209/P020220927770989224668.pdfhttp://www.iie.cas.cn/xsjy2020/zsxx2020/sszs2020/202303/t20230328_6718215.html 暨南大学专业：网络空间安全招生人数：42初试科目：11830（数据结构）复试线：331&#x2F;310复试科目：笔试 机试 面试 英语问答参考：https://www.cnblogs.com/Samforrest/p/16120066.htmlhttps://yz.jnu.edu.cn/tzgg/main.htmhttps://zhuanlan.zhihu.com/p/459420308https://zhuanlan.zhihu.com/p/588556259?utm_id=0 北京邮电大学专业：网络空间安全招生人数：44初试科目：11408复试线：325&#x2F;313复试科目：政治面试 专业面试（主要考核外语听说和利用专业学科理论发现、分析和解决问题的能力）参考：https://scss.bupt.edu.cn/info/1110/4869.htm","tags":["将来"],"categories":["笔记"]},{"title":"TestLaTeX","path":"/2023/07/17/TestLaTeX/","content":"？？？ $$ a$$"},{"title":"有哪些出路？","path":"/2023/07/17/哪些出路？/","content":"真的有未来吗？ 研究生 普通高校 研究院 中国科学院计算机网络信息中心（计算机技术） 公务员 央国企 国家电网（计算机类） 多看研招网 https://yz.chsi.com.cn多看官方信息 国家电网 https://zhaopin.sgcc.com.cn/sgcchr/static/comyAument.html 中科院网络中心 http://cnic.cas.cn/rcjy/yjsjy/zsxx/sstk/","tags":["将来"],"categories":["笔记"]},{"title":"什么是 NAT ？","path":"/2023/07/15/什么是-NAT-？/","content":"来自HUAWEI IP百科 NAT 部分 什么是NAT？NAT是一种地址转换技术，它可以将IP数据报文头中的IP地址转换为另一个IP地址，并通过转换端口号达到地址重用的目的。NAT作为一种缓解IPv4公网地址枯竭的过渡技术，由于实现简单，得到了广泛应用。 NAT 解决了什么问题？随着网络应用的增多，IPv4地址枯竭的问题越来越严重。尽管IPv6可以从根本上解决IPv4地址空间不足问题，但目前众多网络设备和网络应用大多是基于IPv4的，因此在IPv6广泛应用之前，使用一些过渡技术（如CIDR、私网地址等）是解决这个问题的主要方式，NAT就是这众多过渡技术中的一种。当私网用户访问公网的报文到达网关设备后，如果网关设备上部署了NAT功能，设备会将收到的IP数据报文头中的IP地址转换为另一个IP地址，端口号转换为另一个端口号之后转发给公网。在这个过程中，设备可以用同一个公网地址来转换多个私网用户发过来的报文，并通过端口号来区分不同的私网用户，从而达到地址复用的目的。早期的NAT是指Basic NAT，Basic NAT在技术上实现比较简单，只支持地址转换，不支持端口转换。因此，Basic NAT只能解决私网主机访问公网问题，无法解决IPv4地址短缺问题。后期的NAT主要是指网络地址端口转换NAPT（Network Address Port Translation），NAPT既支持地址转换也支持端口转换，允许多台私网主机共享一个公网IP地址访问公网，因此NAPT才可以真正改善IP地址短缺问题。 NAT的类型根据NAT转换是对报文中的源地址进行转换还是对目的地址进行转换，NAT可以分为 源NAT 、目的NAT 和 双向NAT ，下面我们分别介绍这三种NAT类型。 源NAT源NAT在NAT转换时，仅对报文中的源地址进行转换，主要应用于私网用户访问公网的场景。当私网用户主机访问Internet时，私网用户主机发送的报文到达NAT设备后，设备通过源NAT技术将报文中的私网IPv4地址转换成公网IPv4地址，从而使私网用户可以正常访问Internet。根据转换时是否同时转换源端口号，源NAT可以细分为如下几种类型，详见下图。￼ 源NAT分类 目的NAT目的NAT在NAT转换时，仅对报文中的目的地址和目的端口号进行转换，主要应用于公网用户访问私网服务的场景。当公网用户主机发送的报文到达NAT设备后，设备通过目的NAT技术将报文中的公网IPv4地址转换成私网IPv4地址，从而使公网用户可以使用公网地址访问私网服务。根据转换前后的地址是否存在一种固定的映射关系，目的NAT可以细分为如下几种类型，详见下图。￼ 目的NAT分类 双向NAT双向NAT指的是在转换过程中同时转换报文的源信息和目的信息。双向NAT不是一个单独的功能，而是源NAT和目的NAT的组合。双向NAT是针对同一条流，在其经过设备时同时转换报文的源地址和目的地址。双向NAT主要应用在同时有外网用户访问内部服务器和私网用户访问内部服务器的场景。STUN中定义的NAT类型在STUN标准中，根据私网IP地址和端口到NAT出口的公网IP地址和端口的映射方式，把NAT分为如下四种类型，详见下图。 双向NAT分类 STUN中定义的NAT类型 Full Cone NAT（完全锥型NAT） 所有从同一个私网IP地址和端口（IP1:Port1）发送过来的请求都会被映射成同一个公网IP地址和端口（IP:Port）。并且，任何外部主机通过向映射的公网IP地址和端口发送报文，都可以实现和内部主机进行通信。 这是一种比较宽松的策略，只要建立了私网IP地址和端口与公网IP地址和端口的映射关系，所有的Internet上的主机都可以访问该NAT之后的主机。 Restricted Cone NAT（限制锥型NAT） 所有从同一个私网IP地址和端口（IP1:Port1）发送过来的请求都会被映射成同一个公网IP和端口号（IP:Port）。与完全锥型NAT不同的是，当且仅当内部主机之前已经向公网主机发送过报文，此时公网主机才能向私网主机发送报文。 Port Restricted Cone NAT（端口限制锥型NAT） 与限制锥型NAT很相似，只不过它包括端口号。也就是说，一台公网主机（IP2:Port2）想给私网主机发送报文，必须是这台私网主机先前已经给这个IP地址和端口发送过报文。 Symmetric NAT（对称NAT） 所有从同一个私网IP地址和端口发送到一个特定的目的IP地址和端口的请求，都会被映射到同一个IP地址和端口。如果同一台主机使用相同的源地址和端口号发送报文，但是发往不同的目的地，NAT将会使用不同的映射。此外，只有收到数据的公网主机才可以反过来向私网主机发送报文。 这和端口限制锥型NAT不同，端口限制锥型NAT是所有请求映射到相同的公网IP地址和端口，而对称NAT是不同的请求有不同的映射。 NAT是如何工作的？根据前面的分类，我们分别从源NAT和目的NAT中各选一种NAT为代表，介绍其工作原理。其他类型的NAT虽然在转换时，转换的内容有细微差别，但是工作原理都相似，不再重复介绍。此外，双向NAT是源NAT和目的NAT的组合，双向NAT的工作原理也不再重复介绍。 NAPT工作原理NAPT在进行地址转换的同时还进行端口转换，可以实现多个私网用户共同使用一个公网IP地址上网。NAPT根据端口来区分不同用户，真正做到了地址复用。 NAPT 工作原理示意图 当Host访问Web Server时，设备的处理过程如下： 设备收到Host发送的报文后查找NAT策略，发现需要对报文进行地址转换。 设备根据源IP Hash算法从NAT地址池中选择一个公网IP地址，替换报文的源IP地址，同时使用新的端口号替换报文的源端口号，并建立会话表，然后将报文发送至Internet。 设备收到Web Server响应Host的报文后，通过查找会话表匹配到步骤2中建立的表项，将报文的目的地址替换为Host的IP地址，将报文的目的端口号替换为原始的端口号，然后将报文发送至Intranet。 NAT Server工作原理使用NAT Server时，需要先在设备上配置公网地址和私网地址的固定映射关系。配置完成后，设备将会生成Server-Map表项，存放公网地址和私网地址的映射关系。该表项将一直存在除非NAT Server的配置被删除。 NAT Server工作原理示意图 内部Server的私网IPv4地址为192.168.1.2&#x2F;24，对外的公网IPv4地址为1.1.1.10，端口号都为80，它们之间的映射关系在设备上已提前配置好。当Host访问Server时，设备的处理过程如下： 设备收到Internet上用户访问1.1.1.10的报文的首包后，查找并匹配到Server-Map表项，将报文的目的IP地址转换为192.168.1.2。 设备建立会话表，然后将报文发送至Intranet。 设备收到Server响应Host的报文后，通过查找会话表匹配到步骤2中建立的表项，将报文的源地址替换为1.1.1.10，然后将报文发送至Internet。 后续Host继续发送给Server的报文，设备都会直接根据会话表项的记录对其进行转换，而不会再去查找Server-map表项。 如何使用NAT？前面已经介绍了，不同的NAT类型适用于不同的应用场景。下面介绍几种典型的NAT应用，帮助用户使用NAT。 私网用户通过NAPT访问Internet在许多小区、学校和企业的私网规划中，由于公网地址资源有限，通常给私网用户分配私网IPv4地址。此时，可以配置源NAT来实现私网用户访问Internet。用户可以根据自己拥有的公网IPv4地址的个数，选择使用NAPT或者Easy IP。当用户拥有的公网IP地址个数较多时，配置了NAT设备出接口的IP地址和其他应用之后，还有可用的空闲公网IP地址时，可以选择NAPT。NAPT使用地址池内的IPv4地址作为私网主机转换后的公网IPv4地址。如下图所示，在设备上配置NAPT，实现私网主机访问Internet功能。 私网用户通过NAPT访问Internet 私网用户通过Easy IP访问Internet当用户拥有的公网IPv4地址个数较少时，配置了NAT设备出接口的IPv4地址和其他应用之后，没有可用的空闲公网IPv4地址时，可以选择Easy IP。Easy IP使用出接口的IPv4地址作为私网主机转换后的公网IPv4地址。如下图所示，在设备上配置Easy IP，实现私网主机访问Internet功能。 私网用户通过Easy IP访问Internet 公网用户通过NAT Server访问私网服务器在某些场合，私网中有一些服务器需要向公网用户提供服务，比如私网中部署的一些Web服务器、FTP服务器等，NAT支持这样的应用，此时可以配置NAT Server来实现公网用户访问私网服务器。如下图所示，在设备上配置NAT Server，固定“公网IP地址＋端口号”与“私网IP地址＋端口号”间的映射关系，实现公网主机通过该映射关系访问私网服务器功能。 公网用户通过NAT Server访问私网服务器","categories":["科普"]},{"title":"MySQL 8 配置指南","path":"/2023/07/14/MySQL-配置指南/","content":"通过mysqld命令开启mysqld服务： ps -ef |grep mysqld 查看进程，先 kill 掉所有的 mysql 相关进程 先使用 mysqld —user&#x3D;root 命令，此时该命令窗口被 mysqld 占用，无法使用 新建 SSH 连接，用新的窗口使用 mysql 命令。 通过service mysqld start命令启动mysqld服务： 先kill掉所有mysqld服务 注意要看日志 可能出现没有权限的情况， 注意：如果在 root 用户下，使用 mysqld 命令启用 MySQL 服务，则会导致产生一些所有者为 root 的文件，这就会导致以后若通过 service mysqld start 来启动 MySQL 服务时，会爆出 Permission Denied 的错误（MySQL 以用户 mysql 的身份来执行任务）。解决方法也很简单，只需要找到 MySQL 的日志文件，找到报错的位置，即找到没有权限的文件，将该文件的所有者修改为 mysql 用户即可。 解释：我们通过yum方式安装mysql,会生成mysql:mysql用户组和用户，启动mysql默认是使用mysql用户。如果我们开启了慢log日志，而且我们使用service mysqld start启动mysql,会报如题所示的错误，根据提示我们知道在my.cnf默认配置指定的&#x2F;var&#x2F;lib&#x2F;mysql这个目录下，存放着数据文件，&#x2F;var&#x2F;lib&#x2F;mysql权限虽然是归mysql:mysql用户组和用户拥有，但是这个目录下的大多数文件，权限都是700,也就是说通过mysql用户来启动，却少权限，我们可以改变这些文件的权限，从而通过使用service mysqld start命令来启动mysql,但是也可以有另外一种方法来启动mysql,而不用改变&#x2F;var&#x2F;lib&#x2F;mysql目录下的文件权限，这个命令就是mysqld –user&#x3D;root,如果需要让这个命令在后台执行，可以使用mysqld –user&#x3D;root &amp;.可以使用chown -R mysql &#x2F;var&#x2F;run&#x2F;mysqld chgrp -R mysql &#x2F;var&#x2F;run&#x2F;mysqld赋予mysql用户&#x2F;var&#x2F;run&#x2F;mysqld的权限除此之外还有&#x2F;var&#x2F;lib&#x2F;mysql 修改密码：skip-grant-tables #跳过mysql登入密码 desc #表名 查询 update user set authentication_string=SHA1(&#39;Your Password&#39;) where user=&#39;root&#39; and host=&#39;localhost&#39;; flush privileges 参考：https://blog.csdn.net/m0_46278037/article/details/113923726mysqld -console –skip-grant-tables –shared-memory –user&#x3D;root 远程连接授权grant all privileges on . to ‘root‘@’%’; https://stackoverflow.com/questions/50691977/how-to-reset-the-root-password-in-mysql-8-0-11 https://stackoverflow.com/questions/9979134/how-can-i-change-mysql-port-from-0-to-3306 解决端口 0edit your my.cnf file and add the line skip-networking &#x3D; Off to the [mysqld] section, then restart the server. 赋予连接权限：授权所有权限 开启远程连接GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39;； flush privileges; 但是出现另一个错误 ERROR 1410 (42000): You are not allowed to create a user with GRANT 查询后解决： update user set host=&#39;%&#39; where user=&#39;root&#39;; 再执行两次 Grant all privileges on test.* to &#39;test&#39;@&#39;%&#39;; 成功 总的步骤 查看临时密码在 log_error 参数(可以通过my.cnf配置文件查看)指定的错误日志中找到类似于如下的信息:A temporary password is generated for root@localhost: AdOoGBs!k84f 登录MySQLmysql -uroot -p Enter password: #输入步骤1中获取的密码，进入数据库。3. 修改root密码执行命令：alter user root@&quot;localhost&quot; identified by &quot;your_new_passwd&quot;;完成修改，便可以正常使用数据库。","tags":["MySQL","MySQL 8","Linux","运维"],"categories":["笔记"]},{"title":"PicTest","path":"/2023/07/14/PicTest/","content":"这是 一张图:IMG_3057.PNG upload successful","categories":["测试"]},{"title":"TestExcerpt","path":"/2023/07/14/TestExcerpt/","content":"ExcerptExcerptExcerptExcerptExcerptExcerptExcerptExcerptExcerptExcerptExcerptExcerptExcerptExcerptExcerptExcerpt ","categories":["测试"]},{"title":"软件工程英文选择题摘录","path":"/2023/07/14/ReviewIssues/","content":"Software deteriorates rather than wears out because 3 Software suffers from exposure to hostile environments Defects are more likely to arise after software has been used often Multiple change requests introduce errors in component interactions Software spare parts become harder to order **A most software development projects are initiated to try to meet some business need.**。 1 True False **In general software only succeeds if its behavior is consistent with the objectives of its designers.**。2 True False 24. Which of the following are recognized process flow types? 13 1. Concurrent process flow 2. Iterative process flow 3. Linear process flow 4. Spiral process flow Which of these are standards for assessing software processes? 24 SEI SPICE ISO 9000 ISO 9001 The waterfall model of software development is 1 A reasonable approach when requirements are well defined. A good approach when a working program is required quickly. The best approach to use for projects with large development teams. An old fashioned model that is rarely used any more. 1. The incremental model of software development is 2 1. A reasonable approach when requirements are well defined. 2. A good approach when a working core product is required quickly. 3. The best approach to use for projects with large development teams. 4. A revolutionary model that is not used for commercial products. 1. Evolutionary software process models 4 1. Are iterative in nature 2. Can easily accommodate product requirements changes 3. Do not generally produce throwaway systems 4. All of the above 1. The concurrent development model is 1. Another name for concurrent engineering. 2. Defines events that trigger engineering activity state transitions. 3. Only used for development of parallel or distributed systems. 4. Used whenever a large number of change requests are anticipated. 1. The component-based development model is 1. Only appropriate for computer hardware design. 2. Not able to support the development of reusable components. 3. Dependent on object technologies for support. 4. Not cost effective by known quantifiable software metrics. 1. Which of these is not one of the phase names defined by the Unified Process model for software development? 1. Inception phase 2. Elaboration phase 3. Construction phase 4. Validation phase 1. Which of these are objectives of Team Software Process? 1. Accelerate software process improvement 2. Allow better time management by highly trained professionals 3. Build self-directed software teams 4. Show managers how to reduce costs and sustain quality 1. It is generally accepted that one cannot have weak software processes and create high quality end products. 1. True 2. False 1. During project inception the intent of the of the tasks are to determine 1. basic problem understanding 2. nature of the solution needed 3. people who want a solution 4. none of the above 1. Three things that make requirements elicitation difficult are problems of 1. budgeting 2. scope 3. understanding 4. volatility 1. A stakeholder is anyone who will purchase the completed software system under development. 1. True 2. False 1. In collaborative requirements gathering the facilitator 1. arranges the meeting place 2. can not be a customer 3. controls the meeting 4. must be an outsider 1. Which of the following is not one of the requirement classifications used in Quality Function Deployment (QFD)? 1. exciting 2. expected 3. mandatory 4. normal 1. The work products produced during requirement elicitation will vary depending on the 1. size of the budget 2. size of the product being built 3. software process being used 4. stakeholders needs 1. Analysis patterns facilitate the transformation of the analysis model into a design model by suggesting reliable solutions to common problems. 1. True 2. False 1. Which of these is not an element of a requirements model? 1. Behavioral elements 2. Class-based elements 3. Data elements 4. Scenario-based elements 1. It is important to consider alternative actor interactions when creating a preliminary use case. 1. True 2. False 1. In many cases there is no need to create a graphical representation of a usage scenario. 1. True 2. False 1. UML activity diagrams are useful in representing which analysis model elements? 1. Behavioral elements 2. Class-based elements 3. Flow-based elements 4. Scenario-based elements 1. Attributes are chosen for an object by examining the problem statement and identifying the entities that appear to be related. 1. True 2. False 1. Which of the following is not one of the broad categories used to classify operations? 1. computation 2. data manipulation 3. event monitors 4. transformers 1. Which of the following items does not appear on a CRC card? 1. class collaborators 2. class name 3. class reliability 4. class responsibilities 1. An analysis package involves the categorization of analysis model elements into useful groupings. 1. True 2. False 1. The data flow diagram 1. depicts relationships between data objects 2. depicts functions that transform the data flow 3. indicates how data are transformed by the system 4. indicates system reactions to external events 1. Control flow diagrams are 1. needed to model event driven systems. 2. required for all systems. 3. used in place of data flow diagrams. 4. used to represent system behavior. 1. For purposes of behavior modeling an event occurs whenever 1. a state and process exchange information. 2. the system an actor exchange information. 3. two actors exchange information. 4. two objects exchange information. 1. For purposes of behavior modeling a state is any 1. consumer or producer of data. 2. data object hierarchy. 3. observable mode of behavior. 4. well defined process. 1. The UML sequence diagram show the order in which system events are processed. 1. True 2. False 1. Analysis patterns are discovered, they are not explicitly created. 1. True 2. False 2. It is not possible to justify the time required for WebApp requirements analysis. a. True b. False What are the elements of a WebApp interaction model? activity diagrams, sequence diagrams, state diagrams, interface prototype activity diagrams, collaboration diagrams, sequence diagrams, state diagrams use-cases, sequence diagrams, state diagrams, interface prototype use-cases, sequence diagrams, state diagrams, sequence diagrams 1. UML activity diagrams can be used to represent the user observable functionality delivered by the WebApp as well as the operations contained in each analysis class. 1. True 2. False 1. Configuration analysis focuses on the architecture of the user’s web browsing environment. 1. True 2. False 1. Which of the following are areas of concern in the design model? 1. architecture 2. data 3. interfaces 4. project scope 2. The importance of software design can be summarized in a single word 1. accuracy 2. complexity 3. efficiency 4. quality 3. Which of these are characteristics of a good design? 1. exhibits strong coupling between its modules 2. implements all requirements in the analysis model 3. includes test cases for all components 4. provides a complete picture of the software 4. Which of the following is not a characteristic common to all design methods? 1. configuration management 2. functional component representation 3. quality assessment guidelines 4. refinement heuristics 5. What types of abstraction are used in software design? 1. control 2. data 3. environmental 4. procedural 1. Cohesion is a qualitative indication of the degree to which a module 1. can be written more compactly. 2. focuses on just one thing. 3. is able to complete its function in a timely manner. 4. is connected to other modules and the outside world. 1. Which of the following is not one of the five design class types 1. Business domain classes 2. Entity classes 3. Process classes 4. User interface classes 2. Which design model elements are used to depict a model of information represented from the user’s view? 1. Architectural design elements 2. Component-level design elements 3. Data design elements 4. Interface design elements 3. Which design is equivalent to the floor plan of a house? 1. Architectural design 2. Component-level design 3. Data design 4. Interface design 4. Which design model is equivalent to the detailed drawings of the access points and external utilities for a house? 1. Architectural design 2. Component-level design 3. Data design 4. Interface design 1. The deployment design elements specify the build order for the software components. 1. True 2. False 1. The best representation of system architecture is an operational software prototype. 1. True 2. False 1. An architectural description is often documented using an architecture template. 1. True 2. False 2. An architectural genre will often dictate the architectural approach that may used for the structure to be built. 1. True 2. False 3. An architectural style encompasses which of the following elements? 1. constraints 2. set of components 3. semantic models 4. syntactic models 4. To determine the architectural style or combination of styles that best fits the proposed system, requirements engineering is used to uncover 1. algorithmic complexity 2. characteristics and constraints 3. control and data 4. design patterns 1. The criteria used to assess the quality of an architectural design should be based on system 1. accessibility 2. control 3. data 4. implementation 2. During process of modeling the system in context, systems that interact with the target system are represented as 1. Peer-level systems 2. Subordinate systems 3. Superordinate systems 4. Working systems 3. Once selected, archetypes always need to be refined further as architectural design proceeds. 1. True 2. False 4. Which of the following is not an example of infrastructure components that may need to be integrated into the software architecture? 1. Communications components 2. Database components 3. Interface components 4. Memory management components 5. In the architecture trade-off analysis method the architectural style should be described using the 1. data flow view 2. module view 3. process view 4. user view 6. Quantitative methods for assessing the quality of proposed architectural designs are readily available. 1. True 2. False 7. A useful technique for evaluating the overall complexity of a proposed architecture is to look at the component 1. cohesion 2. flow dependencies 3. sharing dependencies 4. size 8. When the overall flow in a segment of a data flow diagram is largely sequential and follows straight-line paths _________ is present. 1. low coupling 2. good modularity 3. transaction flow 4. transform flow 9. When a single item that triggers other data flow along one of many paths ________ characterizes the information flow in a segment of a data flow diagram is present. 1. high coupling 2. poor modularity 3. transaction flow 4. transform flow 1. In the context of object-oriented software engineering a component contains 1. attributes and operations 2. instances of each class 3. roles for each actor (device or user) 4. set of collaborating classes 1. Software engineers always need to create components from scratch in order to meet customer expectations fully. 1. True 2. False 2. Which of the following is not one of the four principles used to guide component-level design? 1. Dependency Inversion Principle 2. Interface Segregation Principle 3. Open-Closed Principle 4. Parsimonious Complexity Principle 1. In component design elaboration requires which of the following elements to be describe in detail? 1. Algorithms 2. Attributes 3. Interfaces 4. Operations 2. In component-level design persistent data sources refer to 1. Component libraries 2. Databases 3. Files 4. All of the above 3. WebApp content design at the component level focuses on content objects and the manner in which they interact. 1. True 2. False 4. A WebApp functional architecture describes the key functional components and how they interact with each other. 1. True 2. False 5. Which of these constructs is used in structured programming? 1. branching 2. condition 3. repetition 4. sequence 6. Which of these is a graphical notation for depicting procedural detail? 1. box diagram 2. decision table 3. ER diagram 4. flowchart 1. Which of the following is not one of the major activities of domain engineering? analysis construction dissemination validation 2. Which of the following factors would not be considered during component qualification? application programming interface (API) development and integration tools required exception handling testing equipment required 3. Which is the following is a technique used for component wrapping? black-box wrapping clear-box wrapping gray-box wrapping white-box wrapping 4. Which of the following is not one of the issues that form a basis for design for reuse? object-oriented programming program templates standard data standard interface protocols"},{"title":"欢迎来到 怪奇语录","path":"/2023/07/13/欢迎来到-Zho-s-Blog/","content":"你好！ 我是 Zhonjc 。欢迎来到我的博客，这里记录一些灵感、笔记、认知、想法等等。 怪奇语录，为什么是怪奇？实际上，我在为网站做 ICP 备案之前，网站的名字就是简单的一个 Zho’s Blog 。网站备案对名字要求很高，必须包含中文。最好不要包含英文、名称、博客字样等等。为此，我就想到了一个在高中就想到的名字，叫做 “怪奇法则” ，实际上里面的内容就是一些不常见的、需要用特别解法的 怪数学题 。但是这个名字没有过华为云到初审，因为有 法则 字样，具有权威的意向。这才改成 “怪奇语录” 。 怪奇语录使用了什么框架和主题？博客使用了 Hexo 静态博客框架。之前尝试过 WordPress ，但是，怎么说呢，有点臃肿，而且服务器是最低配运行起来卡卡的，内存常年 100% ，CPU 也差不多。 主题使用了 Stellar ，并在其基础上做了一些个性化，因为我想有插画背景，但是这个主题没有做这个设计。直接加上背景非常丑，为此我在背景上加了 blur 效果和 saturate 效果，又在之上加了一层半透明。做完了之后发现在夜间模式还好，正常模式下有点廉价感。之后将背景的透明度降低到 0.2 。这个时候背p景呈现出类似 Windows 11 的窗体的 Mica 效果，可以看到插画背景的色彩过渡。 插画背景来自一个随机二次元插画 API ：二次元随机图片API ，这个 API 经过备案，且为 HTTPS 。注意，即使你网站本身是 HTTPS 协议，网站内容包含来自非 HTTPS 协议的响应，也会导致网站被认为不安全。Safari 在控制台的不安全警告"},{"title":"Test 2","path":"/Test 2.html","content":"Hi."},{"title":"TestPage","path":"/TestPage/index.html","content":"Hello!"},{"title":"mntips","path":"/mntips/index.html","content":"hexo generate 前，记得在本地安装 Pandoc。 load 监听器是专为 img 等资源元素准备的，不适用于背景图像的加载完成。为什么我设定的不蒜子访客总数和访问总数一样？？？？DNS解析只对应IP，不对应端口。进行更新：使用 Nginx 反向代理 为了让三级及以上域名能够映射到同一个服务器的不同端口上，使用 Nginx 监听不同端口的请求，并将请求反向代理到服务器上的不同端口的服务上。 Nginx 监听 80 端口。这是必须的，因为 HTTP 协议默认为 80 端口，没有人会在域名后面跟个指定端口来访问站点的。对于 HTTPS ，本站点使用 Cloudflare 的 HTTPS 加密，在 Nginx 配置内直接当做非 HTTPS 配置即可。 Nginx 可以为不同的 服务器名称（server_name）来反向代理到不同的 目标地址 。 之前的 Hexo 博客是在 80 端口监听的，我们通过二级域名 zhos.tech 进行访问（我配置了Cloudflare 页面规则，会将其转到三级域名 \\www.zhos.tech）。现在将其更改为 4000 。并在 Nginx 配置监听 80 端口的 zhos.tech ，并反向代理到 \\http://localhost:4000 。这样就处理好了二级域名的目标地址，Nginx 会将 服务器 4000 端口 的服务呈现到浏览器上。 接下来，就可以随心所欲配置 三四五六七八甚至九级域名了（应该没有这么高的）。 现在配置三级域名 gvp.zhos.tech 映射到 Nginx 的 Web 静态目录。 12345678server &#123;\tlisten 80;\tserver_name gvp.zhos.tech;\tlocation / &#123; root html; index index.html;\t&#125;&#125; Nginx 的原理到底是什么呢？为什么它能做到在 DNS 解析域名，指向服务器之后，Nginx 将其他服务器的服务提供给浏览器呢？ 使用 Nginx 便可以做到将各种各样的三级及以上域名分配到同一服务器的各种端口中的服务。 我发现 Nginx 最核心的地方，就是配置文件的写法…… Nginx 配置文件的常规写法： 12345678910111213141516171819202122232425262728293031323334353637383940http &#123;\t# 一个 server 就代表一个独立的服务\tserver&#123; listen xxx; server_name xxx.cn www.xxx.cn xxx.com location / &#123; # 反向代理到其他链接 proxy_pass http://localhost:4000 &#125;\t&#125;\tserver&#123; listen xxx; server_name xxx.xxx.cn xxx.xxx.com location / &#123; # 将 Nginx 的 html 目录作为 Web 服务器根目录 root html index index.html &#125;\t&#125;\tserver&#123; listen xxx; server_name xxx.xxx.xxx.cn xxxx.xxx.com location / &#123; # 将 Nginx 的 html 目录下的 libm 作为 Web 服务器根目录 root html/libm index index.html &#125; location /static/ &#123; # 配置 该 Web 服务需要的资源文件夹 root html # 似乎 Nginx 匹配到 location 后，会将 匹配的部分 也作为目标路径的一部分，例如在这里，Nginx 找的就是 html/static/ ，这不是配置路由。也就是说，root 指的是 匹配的路径 的根目录位置。与之相对的可能是 alias 。 # 注意：location 可以嵌套 &#125;\t&#125;&#125; https://www.wpdaxue.com/too-many-redirects.html"},{"title":"TO DO","path":"/todos/index.html","content":"不要畏难只要一步一个脚印就没有问题"},{"path":"/未命名.html","content":""}]